name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: prepare
        id: prepare
        env:
          BRUTPATHS: |
            {"docker":[],"helm":[],"helmfile":[],"packer":[],"rego":[],"terraform":[".cloud/terraform",".cloud/terraform/modules/toto",".cloud/terraform/blabla-staging"],"terraformWithWorkspace":[{"path":".cloud/terraform","workspace":"toto-prod"},{"path":".cloud/terraform","workspace":"toto-staging"},{"path":".cloud/terraform/modules/proxy_api_v2","workspace":"default"},{"path":".cloud/terraform/blabla-staging","workspace":"default"}]}

          BRUTISP: |
            [
              {
                  name: 'blibli',
                  workspace: 'toto-staging',
                  'working-directory': '.cloud/terraform',
                  role: 'blibli-backend-deploy-lambda',
                  runner: 'blibli-backend-lambda'
              },
              {
                  name: 'blabla',
                  workspace: 'default',
                  'working-directory': '.cloud/terraform/blabla-staging',
                  role: 'blabla-backend-deploy-lambda',
                  runner: 'blabla-backend-lambda'
              }
            ]
        run: |
          BRUTPATHS="${{ toJson(fromJson(env.BRUTPATHS)) }}"
          echo "${BRUTPATHS}" >> $GITHUB_OUTPUT
          BRUTIS="${{ toJson(fromJson(env.BRUTISP)) }}"
          echo "${BRUTIS}" >> $GITHUB_OUTPUT
      - name: debug
        run: |
          echo "${{ steps.prepare.outputs.BRUTPATHS }}"
          echo "${{ steps.prepare.outputs.BRUTPATHS }}"
      - name: Build matrix
        uses: actions/github-script@v6
        id: build-matrix
        env:
          PATHS: ${{ toJson(fromJson(steps.prepare.outputs.BRUTPATHS)) }}
          ISP: ${{ toJson(fromJson(steps.prepare.outputs.BRUTISP)) }}
        with:
          script: |
            const script = require('./.github/scripts/build-matrix-isp.js')
            script({context, core});
      - name: debug
        run: echo "${{ steps.build-matrix.outputs.result }}"
